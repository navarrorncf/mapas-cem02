{"version":3,"sources":["utils/simpleCssClass.js","utils/simpleAttendanceClass.js","utils/abbreviations.js","utils/getFailedSubjects.js","utils/getAttendance.js","utils/filterMap.js","utils/getNumber.js","utils/cssClass.js","utils/getGradesTotal.js","assets/images/brasao-df.png","assets/images/logo128.png","redux/options/optionActionTypes.js","redux/options/initialState.js","redux/options/updatePassedSubjects.js","redux/options/optionsReducer.js","redux/rootReducer.js","redux/store.js","redux/options/optionActions.js","components/options/options.component.jsx","utils/shortenString.js","components/table-row/table-row.component.jsx","utils/getBimester.js","components/table/table.component.jsx","components/report-card/report-card.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","num","shorten","Biologia","Filosofia","História","Inglês","Matemática","Química","Arte","Física","Geografia","Espanhol","Sociologia","lengthen","bio","edf","enr","fil","his","ing","lp","mat","pd1","qui","art","enr2","fis","geo","esp","pd2","pd3","pd4","soc","student","grades","count","Object","keys","forEach","subject","test","bim","filter","el","length","average","index","reduce","acc","cur","getNumber","require","studentObject","values","map","getFailedSubjects","mode","failedSubjects","string","isNaN","key","value","avg","gradeTotals","grade","optionActionTypes","SET_GROUP","SET_GRADE","SET_CURRENT_STUDENT_INDEX","SET_REPORT_CARD_OPEN","SET_FILTER_MODE","SET_ONGOING_CASES","UPDATE_VEREDICT","UPDATE_PASSED_SUBJECT","studentSets","reportCards","group","schoolYear","currentSchoolYear","currentGradeGroups","currentGroup","includes","sort","1","2","3","console","log","allGrades","groupsByGrade","firstGroup","updatePassedSubjects","ongoingCases","payload","code","status","newStudent","passed","push","findIndex","splice","initialState","currentStudentIndex","reportCardOpen","filterMode","optionsReducer","state","type","actionTypes","newVeredicts","veredict","newOngoingCases","combineReducers","options","middlewares","logger","store","createStore","rootReducer","applyMiddleware","setGroup","setReportCardOpen","open","Options","useState","useSelector","changeGroup","changeGrade","changeFilter","dispatch","useDispatch","className","htmlFor","name","onChange","e","currentGrade","target","setGrade","groupName","split","currentFilter","shortenString","len","substring","TableRow","rec","headers","assign","NAME","F","getAttendance","getGradesTotal","handleClick","parentNode","children","innerText","Array","from","document","querySelectorAll","row","classList","contains","setCurrentStudentIndex","onClick","cssClass","toFixed","getBimester","firstStudentGrades","bimesters","Math","max","Table","bimester","currentMap","reportCard","filteredMap","filterMap","unshift","header","ReportCard","blocks","maxIndex","setIndex","setOpen","block","subByBlock","handleClose","targetID","id","handleChevron","operation","i","handleKeyUp","useEffect","window","addEventListener","removeEventListener","onKeyUp","src","logo","alt","brasao","birthdate","rowSpan","colSpan","simpleCssClass","simpleAttendanceClass","Fragment","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1edef88a.chunk.js","sourcesContent":["const simpleCssClass = (num) => {\n  if (num < 3) {\n    return \"ii\";\n  } else if (num < 4.75) {\n    return \"mi\";\n  } else if (num < 5) {\n    return \"mm\";\n  } else if (num < 7) {\n    return \"ms\";\n  } else if (num <= 10) {\n    return \"ss\";\n  } else {\n    return \"\";\n  }\n};\n\nmodule.exports = simpleCssClass;\n","const simpleCssClass = (num) => {\n  if (num < 3) {\n    return \"ss\";\n  } else if (num < 4) {\n    return \"ms\";\n  } else if (num < 6) {\n    return \"mm\";\n  } else if (num < 9) {\n    return \"mi\";\n  } else if (num >= 9) {\n    return \"ii\";\n  } else {\n    return \"\";\n  }\n};\n\nmodule.exports = simpleCssClass;\n","module.exports.shorten = {\n  Biologia: 'bio',\n  'Educação Física': 'edf',\n  'Ensino Religioso': 'enr',\n  Filosofia: 'fil',\n  História: 'his',\n  Inglês: 'ing',\n  'Língua Portuguesa': 'lp',\n  Matemática: 'mat',\n  'Projeto Interdisciplinar I': 'pd1',\n  Química: 'qui',\n  Arte: 'art',\n  'Ensino Religioso II': 'enr2',\n  Física: 'fis',\n  Geografia: 'geo',\n  Espanhol: 'esp',\n  'Projeto Interdisciplinar II': 'pd2',\n  'Projeto Interdisciplinar III': 'pd3',\n  'Projeto Interdisciplinar IV': 'pd4',\n  Sociologia: 'soc',\n};\n\nmodule.exports.lengthen = {\n  bio: 'Biologia',\n  edf: 'Educação Física',\n  enr: 'Ensino Religioso',\n  fil: 'Filosofia',\n  his: 'História',\n  ing: 'Inglês',\n  lp: 'Língua Portuguesa',\n  mat: 'Matemática',\n  pd1: 'Projeto Interdisciplinar I',\n  qui: 'Química',\n  art: 'Arte',\n  enr2: 'Ensino Religioso II',\n  fis: 'Física',\n  geo: 'Geografia',\n  esp: 'Espanhol',\n  pd2: 'Projeto Interdisciplinar II',\n  pd3: 'Projeto Interdisciplinar III',\n  pd4: 'Projeto Interdisciplinar IV',\n  soc: 'Sociologia',\n};\n","const getFailedSubjects = (student) => {\n  const grades = student.grades;\n  let count = 0;\n\n  Object.keys(grades).forEach((subject) => {\n    if (!/pd/.test(subject)) {\n      let bim = grades[subject].filter((el) => el !== \"-\").length / 2;\n      let values = grades[subject].filter(\n        (el, index) => el !== \"-\" && index % 2 === 0\n      );\n      let average = values.reduce((acc, cur) => acc + cur * 1, 0);\n      average /= bim;\n\n      if (average < 4.75) {\n        count += 1;\n      }\n    }\n  });\n\n  return count;\n};\n\nmodule.exports = getFailedSubjects;\n","const getNumber = require(\"./getNumber\");\n\nconst getAttendance = (studentObject) => {\n  const grades = Object.values(studentObject.grades);\n\n  const attendanceArray = grades.map(\n    (subject) =>\n      getNumber(subject[1]) +\n      getNumber(subject[3]) +\n      getNumber(subject[5]) +\n      getNumber(subject[7])\n  );\n\n  const attendanceCount = attendanceArray.reduce((acc, cur) => acc + cur, 0);\n\n  return attendanceCount;\n};\n\nmodule.exports = getAttendance;\n","const getFailedSubjects = require(\"./getFailedSubjects\");\n\nconst filterMap = (map, mode) => {\n  switch (mode) {\n    case \"none\":\n      return map;\n    case \"passed\":\n      return map.filter((el) => getFailedSubjects(el) === 0);\n    case \"ongoing\":\n      return map.filter((el) => getFailedSubjects(el) > 0);\n    case \"rec\":\n      return map.filter((el) => {\n        const failedSubjects = getFailedSubjects(el);\n        return failedSubjects > 0 && failedSubjects < 4;\n      });\n    case \"failed\":\n      return map.filter((el) => getFailedSubjects(el) > 4);\n    default:\n      return map;\n  }\n};\n\nmodule.exports = filterMap;\n","const getNumber = (string) => (isNaN(string * 1) ? 0 : string * 1);\n\nmodule.exports = getNumber;\n","const cssClass = (key, value, student) => {\n  if (key === \"NOME\") {\n    return \"text\";\n  }\n\n  const bim = student.grades[key].filter((el) => el !== \"-\").length / 2;\n\n  let avg = (value * 1 || 0) / bim;\n\n  if (avg < 3 || isNaN(avg)) {\n    return \"ii\";\n  } else if (avg < 4.75) {\n    return \"mi\";\n  } else if (avg < 5) {\n    return \"mm\";\n  } else if (avg < 7) {\n    return \"ms\";\n  } else {\n    return \"ss\";\n  }\n};\n\nmodule.exports = cssClass;\n","const getNumber = require(\"./getNumber\");\n\nconst getGradesTotal = (student) => {\n  const grades = student.grades;\n\n  const gradeTotals = {};\n\n  Object.keys(grades).forEach((grade) => {\n    gradeTotals[grade] =\n      getNumber(grades[grade][0]) +\n      getNumber(grades[grade][2]) +\n      getNumber(grades[grade][4]) +\n      getNumber(grades[grade][6]);\n  });\n\n  return gradeTotals;\n};\n\nmodule.exports = getGradesTotal;\n","module.exports = __webpack_public_path__ + \"static/media/brasao-df.790d8323.png\";","module.exports = __webpack_public_path__ + \"static/media/logo128.b40ec72d.png\";","const optionActionTypes = {\n  SET_GROUP: \"SET_GROUP\",\n  SET_GRADE: \"SET_GRADE\",\n  SET_CURRENT_STUDENT_INDEX: \"SET_CURRENT_STUDENT_INDEX\",\n  SET_REPORT_CARD_OPEN: \"SET_REPORT_CARD_OPEN\",\n  SET_FILTER_MODE: \"SET_FILTER_MODE\",\n  SET_ONGOING_CASES: \"SET_ONGOING_CASES\",\n  UPDATE_VEREDICT: \"UPDATE_VEREDICT\",\n  UPDATE_PASSED_SUBJECT: \"UPDATE_PASSED_SUBJECT\",\n};\n\nexport default optionActionTypes;\n","import reportCards from \"../../dev-data/reportCards.json\";\n\nconst studentSets = reportCards\n  .map(({ group, schoolYear }) => ({ group, schoolYear }))\n  .reduce(\n    (acc, cur) => {\n      const currentSchoolYear = cur.schoolYear,\n        currentGradeGroups = acc[currentSchoolYear],\n        currentGroup = cur.group;\n\n      return currentGradeGroups.includes(currentGroup)\n        ? acc\n        : {\n            ...acc,\n            [currentSchoolYear]: [...currentGradeGroups, currentGroup].sort(),\n          };\n    },\n    { 1: [], 2: [], 3: [] }\n  );\n\nconsole.log(studentSets);\n\nconst allGrades = Object.keys(studentSets);\nallGrades.sort();\n\nconst groupsByGrade = studentSets;\n\nconst firstGroup = groupsByGrade[\"1\"][0];\n\nconst reportCardOpen = false;\n\nconst currentStudentIndex = 0;\n\nconst filterMode = \"none\";\n\nconst ongoingCases = [];\n\nexport {\n  allGrades,\n  groupsByGrade,\n  firstGroup,\n  reportCards,\n  currentStudentIndex,\n  reportCardOpen,\n  filterMode,\n  ongoingCases,\n};\n","const updatePassedSubjects = (ongoingCases, payload) => {\n  let newOngoingCases = [...ongoingCases].map((student) => {\n    let { code, subject, status } = payload;\n\n    if (student.code === code) {\n      let newStudent = { ...student },\n        passed = newStudent.passed;\n      if (status === \"ap\") {\n        if (!passed) {\n          passed = [subject];\n        } else if (!passed.includes(subject)) {\n          passed.push(subject);\n        }\n        return {\n          ...newStudent,\n          passed,\n        };\n      } else if (status === \"rep\") {\n        if (!passed) {\n          return student;\n        } else {\n          let index = passed.findIndex((el) => el === subject);\n          passed.splice(index, 1);\n        }\n\n        return {\n          ...newStudent,\n          passed,\n        };\n      }\n    }\n\n    return student;\n  });\n\n  return newOngoingCases;\n};\n\nexport default updatePassedSubjects;\n","import actionTypes from \"./optionActionTypes\";\nimport {\n  allGrades,\n  firstGroup,\n  currentStudentIndex,\n  reportCardOpen,\n  filterMode,\n  ongoingCases,\n} from \"./initialState\";\n\nimport updatePassedSubjects from \"./updatePassedSubjects\";\n\nconst initialState = {\n  grade: allGrades[0],\n  group: firstGroup,\n  currentStudentIndex,\n  reportCardOpen,\n  filterMode,\n  ongoingCases,\n};\n\nconst optionsReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case actionTypes.SET_GRADE:\n      return {\n        ...state,\n        grade: payload,\n      };\n    case actionTypes.SET_GROUP:\n      return {\n        ...state,\n        group: payload,\n      };\n    case actionTypes.SET_CURRENT_STUDENT_INDEX:\n      return {\n        ...state,\n        currentStudentIndex: payload,\n      };\n    case actionTypes.SET_REPORT_CARD_OPEN:\n      return {\n        ...state,\n        reportCardOpen: payload,\n      };\n    case actionTypes.SET_FILTER_MODE:\n      return {\n        ...state,\n        filterMode: payload,\n      };\n    case actionTypes.SET_ONGOING_CASES:\n      return {\n        ...state,\n        ongoingCases: payload,\n      };\n    case actionTypes.UPDATE_VEREDICT:\n      let newVeredicts = [...state.ongoingCases].map((student) => {\n        let { code, veredict } = payload;\n        if (student.code === code) {\n          let newStudent = { ...student };\n\n          return {\n            ...newStudent,\n            veredict,\n          };\n        }\n        return student;\n      });\n\n      return {\n        ...state,\n        ongoingCases: newVeredicts,\n      };\n    case actionTypes.UPDATE_PASSED_SUBJECT:\n      let newOngoingCases = updatePassedSubjects(state.ongoingCases, payload);\n\n      return {\n        ...state,\n        ongoingCases: newOngoingCases,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default optionsReducer;\n","import { combineReducers } from \"redux\";\nimport optionsReducer from \"./options/optionsReducer\";\n\nexport default combineReducers({\n  options: optionsReducer,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { logger } from \"redux-logger\";\nimport rootReducer from \"./rootReducer\";\n\nconst middlewares = [logger];\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nexport default store;\n","import actionTypes from \"./optionActionTypes\";\n\nexport const setGroup = (group) => ({\n  type: actionTypes.SET_GROUP,\n  payload: group,\n});\n\nexport const setGrade = (grade) => ({\n  type: actionTypes.SET_GRADE,\n  payload: grade,\n});\n\nexport const setCurrentStudentIndex = (index) => ({\n  type: actionTypes.SET_CURRENT_STUDENT_INDEX,\n  payload: index,\n});\n\nexport const setReportCardOpen = (open) => ({\n  type: actionTypes.SET_REPORT_CARD_OPEN,\n  payload: open,\n});\n\nexport const setFilterMode = (mode) => ({\n  type: actionTypes.SET_FILTER_MODE,\n  payload: mode,\n});\n\nexport const setOngoingCases = (cases) => ({\n  type: actionTypes.SET_ONGOING_CASES,\n  payload: cases,\n});\n\nexport const updateVeredict = (veredict) => ({\n  type: actionTypes.UPDATE_VEREDICT,\n  payload: veredict,\n});\n\nexport const updatePassedSubjects = (subject) => ({\n  type: actionTypes.UPDATE_PASSED_SUBJECT,\n  payload: subject,\n});\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setGroup,\n  setGrade,\n  setFilterMode,\n} from \"../../redux/options/optionActions\";\n\nimport { allGrades, groupsByGrade } from \"../../redux/options/initialState\";\n\nimport \"./options.styles.scss\";\n\nconst Options = () => {\n  let [group, changeGroup] = useState(\n    useSelector((state) => state.options.group)\n  );\n\n  let [grade, changeGrade] = useState(\n    useSelector((state) => state.options.grade)\n  );\n\n  let [filter, changeFilter] = useState(\n    useSelector((state) => state.options.filterMode)\n  );\n\n  const dispatch = useDispatch();\n\n  const handleChangeGroup = (e) => {\n    changeGroup(e.target.value);\n    dispatch(setGroup(e.target.value));\n  };\n\n  const handleChangeGrade = (e) => {\n    const currentGrade = e.target.value;\n    changeGrade(currentGrade);\n    dispatch(setGrade(currentGrade));\n    const firstGroup = groupsByGrade[currentGrade][0];\n    changeGroup(firstGroup);\n    dispatch(setGroup(firstGroup));\n  };\n\n  const handleChangeFilter = (e) => {\n    const currentFilter = e.target.value;\n    changeFilter(currentFilter);\n    dispatch(setFilterMode(currentFilter));\n  };\n\n  return (\n    <div className=\"options-container\">\n      <div className=\"title\">\n        <h1>\n          Mapa de Notas &mdash; {grade}º ano &mdash; {group}\n        </h1>\n      </div>\n      <div className=\"options\">\n        <div className=\"option\">\n          <label htmlFor=\"grade\">Série: </label>\n          <select name=\"grade\" value={grade} onChange={handleChangeGrade}>\n            {allGrades.map((grade) => (\n              <option value={grade} key={`grade-${grade}`}>\n                {grade}ª\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"option\">\n          <label htmlFor=\"group\">Turma: </label>\n          <select name=\"group\" value={group} onChange={handleChangeGroup}>\n            {groupsByGrade[grade].map((groupName) => (\n              <option\n                value={groupName}\n                key={`group-${groupName.split(\" \")[0]}`}\n              >\n                {groupName}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"option\">\n          <label htmlFor=\"filter\">Filtro: </label>\n          <select name=\"filter\" value={filter} onChange={handleChangeFilter}>\n            <option value=\"none\">Nenhum</option>\n            <option value=\"passed\">Aprovados</option>\n            <option value=\"ongoing\">Não Aprovados</option>\n            <option value=\"rec\">Em Recuperação</option>\n            <option value=\"failed\">Reprovados</option>\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Options;\n","const shortenString = (string, len) => {\n  if (len >= string.length) return string;\n  return string.substring(0, len);\n};\n\nexport default shortenString;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  setCurrentStudentIndex,\n  setReportCardOpen,\n} from \"../../redux/options/optionActions\";\n\nimport \"./table-row.styles.scss\";\n\nimport cssClass from \"../../utils/cssClass\";\nimport shortenString from \"../../utils/shortenString\";\nimport getAttendance from \"../../utils/getAttendance\";\nimport getGradesTotal from \"../../utils/getGradesTotal\";\nimport getFailedSubjects from \"../../utils/getFailedSubjects\";\n\nconst recCssClass = (rec) =>\n  rec === 0\n    ? \"ss\"\n    : rec === 1\n    ? \"ms\"\n    : rec === 2\n    ? \"mm\"\n    : rec === 3\n    ? \"mi\"\n    : \"ii\";\n\nconst TableRow = ({ student, headers }) => {\n  const studentObject = Object.assign(\n    { NAME: student.name, F: getAttendance(student) },\n    getGradesTotal(student)\n  );\n\n  const dispatch = useDispatch();\n\n  const handleClick = (e) => {\n    const target = e.target.parentNode;\n    const name = target.children[0].innerText;\n\n    const rowsArray = Array.from(document.querySelectorAll(\"tbody tr\"))\n      .map((row) => row.children[0])\n      .filter((row) => row.classList.contains(\"NOME\"))\n      .map((row) => row.innerText);\n\n    const index = rowsArray.findIndex((el) => name === el);\n\n    dispatch(setCurrentStudentIndex(index));\n    dispatch(setReportCardOpen(true));\n  };\n\n  return (\n    <tr>\n      {headers\n        .map((el) =>\n          el !== \"F\" && !/(PD1|PD3)/.test(el) ? (\n            <td\n              onClick={handleClick}\n              className={`${el === \"NOME\" ? el : \"sub\"} ${cssClass(\n                el,\n                studentObject[el],\n                student\n              )}`}\n              key={`sd-${student.code}-${el}`}\n            >\n              {el === \"NOME\"\n                ? shortenString(student[\"name\"], 30)\n                : studentObject[el].toFixed(2)}\n            </td>\n          ) : (\n            \"\" // TODO: Exchange \"\" for attendance with css classes\n          )\n        )\n        .filter((el) => el !== \"\")}\n      <td\n        className={`sub ${recCssClass(getFailedSubjects(student))}`}\n        key={`sd-${student.code}-REC`}\n      >\n        {getFailedSubjects(student)}\n      </td>\n    </tr>\n  );\n};\n\nexport default TableRow;\n","const getBimester = (group) => {\n  const firstStudentGrades = group[0].grades;\n\n  const annuals = [\"edf\", \"lp\", \"mat\"];\n  const bimesters = annuals.map(\n    (subject) => firstStudentGrades[subject].length\n  );\n\n  return Math.max(...bimesters) / 2;\n};\n\nexport default getBimester;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport TableRow from \"../table-row/table-row.component\";\n\nimport reportCards from \"../../dev-data/reportCards.json\";\n\nimport getBimester from \"../../utils/getBimester\";\nimport filterMap from \"../../utils/filterMap\";\n\nimport \"./table.styles.scss\";\n\nconst Table = () => {\n  const { group, filterMode } = useSelector((state) => state.options);\n\n  const currentMap = reportCards.filter(\n    (reportCard) => reportCard.group === group\n  );\n\n  const filteredMap = filterMap(currentMap, filterMode);\n\n  let headers, bimester;\n\n  if (filteredMap.length) {\n    headers = Object.keys(filteredMap[0].grades);\n    headers.sort();\n    headers.unshift(\"NOME\");\n    headers.push(\"F\");\n    bimester = getBimester(filteredMap);\n  }\n\n  return filteredMap.length ? (\n    <div className=\"table-container\">\n      <table className=\"table\">\n        <thead className=\"table--head\">\n          <tr>\n            {headers\n              .filter((el) => !/(PD1|PD3)/.test(el))\n              .map((header) =>\n                header !== \"F\" ? (\n                  <th\n                    key={`head-${header}`}\n                    className={header === \"NOME\" ? `head ${header}` : \"sub\"}\n                  >\n                    {header}\n                  </th>\n                ) : (\n                  \"\"\n                )\n              )\n              .filter((el) => el !== \"\")}\n            <th key={`head-REC`} className=\"sub\">\n              REC\n            </th>\n          </tr>\n        </thead>\n        <tbody className=\"table--body\">\n          {filteredMap.map((student) => (\n            <TableRow\n              student={student}\n              headers={headers}\n              bimester={bimester}\n              key={`student-${student.code}`}\n            />\n          ))}\n        </tbody>\n        <tfoot className=\"table--head\">\n          <tr>\n            {headers\n              .filter((el) => !/(PD1|PD3)/.test(el))\n              .map((header) =>\n                header !== \"F\" ? (\n                  <th\n                    key={`head-${header}`}\n                    className={header === \"NOME\" ? `head ${header}` : \"sub\"}\n                  >\n                    {header}\n                  </th>\n                ) : (\n                  \"\"\n                )\n              )\n              .filter((el) => el !== \"\")}\n            <th key={`head-REC`} className=\"sub\">\n              REC\n            </th>\n          </tr>\n        </tfoot>\n      </table>\n    </div>\n  ) : (\n    <div className=\"no-students\">\n      <span>Nenhum estudante atende a esses critérios.</span>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setReportCardOpen } from \"../../redux/options/optionActions\";\n\nimport reportCards from \"../../dev-data/reportCards.json\";\nimport { lengthen } from \"../../utils/abbreviations\";\nimport simpleCssClass from \"../../utils/simpleCssClass\";\nimport simpleAttendanceClass from \"../../utils/simpleAttendanceClass\";\nimport getAttendance from \"../../utils/getAttendance\";\nimport getFailedSubjects from \"../../utils/getFailedSubjects\";\n\nimport brasao from \"../../assets/images/brasao-df.png\";\nimport logo from \"../../assets/images/logo128.png\";\n\nimport filterMap from \"../../utils/filterMap\";\n\nimport \"./report-card.styles.scss\";\n\nconst ReportCard = () => {\n  const dispatch = useDispatch();\n\n  const { group, reportCardOpen, currentStudentIndex, filterMode } =\n    useSelector((state) => state.options);\n\n  const [index, setIndex] = useState(0);\n\n  const [open, setOpen] = useState(\n    useSelector((state) => state.options.reportCardOpen)\n  );\n\n  const currentMap = reportCards.filter(\n    (reportCard) => reportCard.group === group\n  );\n\n  const filteredMap = filterMap(currentMap, filterMode);\n\n  let blocks, maxIndex;\n\n  if (filteredMap.length) {\n    blocks = filteredMap[0].block;\n    maxIndex = filteredMap.length - 1;\n  }\n\n  const subByBlock = {\n    1: [\"bio\", \"fil\", \"his\", \"ing\", \"qui\"],\n    2: [\"art\", \"esp\", \"fis\", \"geo\", \"soc\", \"pd2\"],\n  };\n\n  let student = filteredMap && filteredMap[index];\n\n  let failedSubjects;\n\n  if (student) {\n    failedSubjects = getFailedSubjects(student);\n  }\n\n  const handleClose = (e) => {\n    const targetID = e.target.id;\n    if (targetID !== \"report-card-container\" && targetID !== \"close-button\") {\n      return;\n    }\n    setIndex(0);\n    dispatch(setReportCardOpen(false));\n  };\n\n  const handleChevron = (operation) => {\n    const i = index;\n    if (operation === \"+\" && index < maxIndex) {\n      setIndex(i + 1);\n    } else if (operation === \"-\" && index > 0) {\n      setIndex(i - 1);\n    }\n\n    failedSubjects = getFailedSubjects(student);\n  };\n\n  const handleKeyUp = (e) => {\n    if (e.key === \"ArrowRight\") {\n      handleChevron(\"+\");\n    } else if (e.key === \"ArrowLeft\") {\n      handleChevron(\"-\");\n    } else if (e.key === \"Escape\") {\n      setOpen(false);\n      dispatch(setReportCardOpen(open));\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keyup\", handleKeyUp, false);\n\n    return () => {\n      window.removeEventListener(\"keyup\", handleKeyUp);\n    };\n  });\n\n  useEffect(() => {\n    setIndex(currentStudentIndex);\n  }, [currentStudentIndex]);\n\n  return student ? (\n    <div\n      className={`report-card-container ${reportCardOpen ? \"\" : \"closed\"}`}\n      id=\"report-card-container\"\n      onKeyUp={handleKeyUp}\n      onClick={handleClose}\n    >\n      <div className=\"report-card\">\n        <div className=\"close-button\" id=\"close-button\" onClick={handleClose}>\n          ✕\n        </div>\n        <div className=\"chevron-right\" onClick={() => handleChevron(\"+\")}>\n          ❱\n        </div>\n        <div className=\"chevron-left\" onClick={() => handleChevron(\"-\")}>\n          ❰\n        </div>\n        <div className=\"report-card--data\">\n          <div className=\"heading\">\n            <div className=\"image-container\">\n              <img src={logo} alt=\"Brsão do \" />\n            </div>\n            <h3>\n              Governo do Distrito Federal\n              <br />\n              Secretaria de Estado de Educação\n              <br />\n              Coordenação Regional de ensino de Brazlândia\n              <br />\n              Centro de Ensino Médio 02\n            </h3>\n            <div className=\"image-container\">\n              <img src={brasao} alt=\"Brsão do \" />\n            </div>\n          </div>\n          <div className=\"student-data\">\n            <p>Nome: {student.name} </p>\n            <p>Nascimento: {student.birthdate} </p>\n            <p>Série: {student.schoolYear}ª série</p>\n            <p>Turma: {student.group} </p>\n          </div>\n          <div className=\"grades-data\">\n            <table>\n              <thead>\n                <tr>\n                  <th rowSpan=\"2\" className=\"disciplinas\">\n                    BLOCO {blocks[0]}\n                  </th>\n                  <th colSpan=\"2\">1º Bimestre</th>\n                  <th colSpan=\"2\">2º Bimestre</th>\n                  <th rowSpan=\"2\" className=\"disciplinas\">\n                    BLOCO {blocks[1]}\n                  </th>\n                  <th colSpan=\"2\">3º Bimestre</th>\n                  <th colSpan=\"2\">4º Bimestre</th>\n                </tr>\n                <tr>\n                  <th className=\"coluna\">Notas</th>\n                  <th className=\"coluna\">Faltas</th>\n                  <th className=\"coluna\">Notas</th>\n                  <th className=\"coluna\">Faltas</th>\n                  <th className=\"coluna\">Notas</th>\n                  <th className=\"coluna\">Faltas</th>\n                  <th className=\"coluna\">Notas</th>\n                  <th className=\"coluna\">Faltas</th>\n                </tr>\n              </thead>\n              <tbody>\n                {/* {[0, 1, 2, 3, 4, 5].map((i) => (\n                  <tr>\n                    {blocks.map((block) => {\n                      return (\n                        <React.Fragment>\n                          <td className=\"disciplinas\">\n                            {lengthen[subByBlock[block][i]]}\n                          </td>\n                          {student.grades[subByBlock[block][i]].map((data) => (\n                            <td className={`coluna ${simpleCssClass(data)}`}>\n                              {data}\n                            </td>\n                          ))}\n                        </React.Fragment>\n                      );\n                    })}\n                  </tr>\n                ))} */}\n                <tr>\n                  <td className=\"disciplinas\"> {lengthen[\"edf\"]} </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[\"edf\"][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"edf\"][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[\"edf\"][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"edf\"][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[\"edf\"][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"edf\"][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[\"edf\"][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"edf\"][3] || \"-\"}\n                  </td>\n                  <td className=\"disciplinas\">{lengthen[\"edf\"]}</td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[\"edf\"][4] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"edf\"][4] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[\"edf\"][5] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"edf\"][5] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[\"edf\"][6] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"edf\"][6] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[\"edf\"][7] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"edf\"][7] || \"-\"}\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"disciplinas\">{lengthen[\"lp\"]}</td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[\"lp\"][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"lp\"][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[\"lp\"][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"lp\"][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[\"lp\"][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"lp\"][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[\"lp\"][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"lp\"][3] || \"-\"}\n                  </td>\n                  <td className=\"disciplinas\">{lengthen[\"lp\"]}</td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[\"lp\"][4] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"lp\"][4] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[\"lp\"][5] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"lp\"][5] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[\"lp\"][6] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"lp\"][6] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[\"lp\"][7] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"lp\"][7] || \"-\"}\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"disciplinas\">{lengthen[\"mat\"]}</td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[\"mat\"][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"mat\"][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[\"mat\"][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"mat\"][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[\"mat\"][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"mat\"][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[\"mat\"][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"mat\"][3] || \"-\"}\n                  </td>\n                  <td className=\"disciplinas\">{lengthen[\"mat\"]}</td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[\"mat\"][4] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"mat\"][4] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[\"mat\"][5] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"mat\"][5] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[\"mat\"][6] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"mat\"][6] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[\"mat\"][7] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"mat\"][7] || \"-\"}\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"disciplinas\">\n                    {lengthen[subByBlock[blocks[0]][0]]}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[0]][0]][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][0]][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[0]][0]][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][0]][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[0]][0]][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][0]][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[0]][0]][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][0]][3] || \"-\"}\n                  </td>\n                  <td className=\"disciplinas\">\n                    {lengthen[subByBlock[blocks[1]][0]]}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[1]][0]][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][0]][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[1]][0]][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][0]][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[1]][0]][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][0]][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[1]][0]][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][0]][3] || \"-\"}\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"disciplinas\">\n                    {lengthen[subByBlock[blocks[0]][1]]}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[0]][1]][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][1]][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[0]][1]][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][1]][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[0]][1]][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][1]][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[0]][1]][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][1]][3] || \"-\"}\n                  </td>\n                  <td className=\"disciplinas\">\n                    {lengthen[subByBlock[blocks[1]][1]]}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[1]][1]][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][1]][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[1]][1]][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][1]][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[1]][1]][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][1]][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[1]][1]][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][1]][3] || \"-\"}\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"disciplinas\">\n                    {lengthen[subByBlock[blocks[0]][2]]}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[0]][2]][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][2]][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[0]][2]][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][2]][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[0]][2]][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][2]][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[0]][2]][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][2]][3] || \"-\"}\n                  </td>\n                  <td className=\"disciplinas\">\n                    {lengthen[subByBlock[blocks[1]][2]]}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[1]][2]][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][2]][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[1]][2]][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][2]][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[1]][2]][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][2]][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[1]][2]][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][2]][3] || \"-\"}\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"disciplinas\">\n                    {lengthen[subByBlock[blocks[0]][3]]}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[0]][3]][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][3]][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[0]][3]][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][3]][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[0]][3]][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][3]][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[0]][3]][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][3]][3] || \"-\"}\n                  </td>\n                  <td className=\"disciplinas\">\n                    {lengthen[subByBlock[blocks[1]][3]]}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[1]][3]][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][3]][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[1]][3]][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][3]][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[1]][3]][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][3]][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[1]][3]][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][3]][3] || \"-\"}\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"disciplinas\">\n                    {lengthen[subByBlock[blocks[0]][4]]}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[0]][4]][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][4]][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[0]][4]][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][4]][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[0]][4]][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][4]][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[0]][4]][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][4]][3] || \"-\"}\n                  </td>\n                  <td className=\"disciplinas\">\n                    {lengthen[subByBlock[blocks[1]][4]]}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[1]][4]][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][4]][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[1]][4]][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][4]][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[1]][4]][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][4]][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[1]][4]][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][4]][3] || \"-\"}\n                  </td>\n                </tr>\n                <tr>\n                  {!subByBlock[blocks[0]][5] ? (\n                    <React.Fragment>\n                      <td className=\"disciplinas\"></td>\n                      <td className=\"coluna\">-</td>\n                      <td className=\"coluna\">-</td>\n                      <td className=\"coluna\">-</td>\n                      <td className=\"coluna\">-</td>\n                      <td className=\"disciplinas\">\n                        {lengthen[subByBlock[blocks[1]][5]] || \"\"}\n                      </td>\n                      <td\n                        className={`coluna ${simpleCssClass(\n                          student.grades[subByBlock[blocks[1]][5]][0] || \"-\"\n                        )}`}\n                      >\n                        {student.grades[subByBlock[blocks[1]][5]][0] || \"-\"}\n                      </td>\n                      <td\n                        className={`coluna ${simpleAttendanceClass(\n                          student.grades[subByBlock[blocks[1]][5]][1] || \"-\"\n                        )}`}\n                      >\n                        {student.grades[subByBlock[blocks[1]][5]][1] || \"-\"}\n                      </td>\n                      <td\n                        className={`coluna ${simpleCssClass(\n                          student.grades[subByBlock[blocks[1]][5]][2] || \"-\"\n                        )}`}\n                      >\n                        {student.grades[subByBlock[blocks[1]][5]][2] || \"-\"}\n                      </td>\n                      <td\n                        className={`coluna ${simpleAttendanceClass(\n                          student.grades[subByBlock[blocks[1]][5]][3] || \"-\"\n                        )}`}\n                      >\n                        {student.grades[subByBlock[blocks[1]][5]][3] || \"-\"}\n                      </td>\n                    </React.Fragment>\n                  ) : (\n                    <React.Fragment>\n                      <td className=\"disciplinas\">\n                        {lengthen[subByBlock[blocks[0]][5]] || \"\"}\n                      </td>\n                      <td\n                        className={`coluna ${simpleCssClass(\n                          student.grades[subByBlock[blocks[0]][5]][0] || \"-\"\n                        )}`}\n                      >\n                        {student.grades[subByBlock[blocks[0]][5]][0] || \"-\"}\n                      </td>\n                      <td\n                        className={`coluna ${simpleAttendanceClass(\n                          student.grades[subByBlock[blocks[0]][5]][1] || \"-\"\n                        )}`}\n                      >\n                        {student.grades[subByBlock[blocks[0]][5]][1] || \"-\"}\n                      </td>\n                      <td\n                        className={`coluna ${simpleCssClass(\n                          student.grades[subByBlock[blocks[0]][5]][2] || \"-\"\n                        )}`}\n                      >\n                        {student.grades[subByBlock[blocks[0]][5]][2] || \"-\"}\n                      </td>\n                      <td\n                        className={`coluna ${simpleAttendanceClass(\n                          student.grades[subByBlock[blocks[0]][5]][3] || \"-\"\n                        )}`}\n                      >\n                        {student.grades[subByBlock[blocks[0]][5]][3] || \"-\"}\n                      </td>\n                      <td className=\"disciplinas\"></td>\n                      <td className=\"coluna\">-</td>\n                      <td className=\"coluna\">-</td>\n                      <td className=\"coluna\">-</td>\n                      <td className=\"coluna\">-</td>\n                    </React.Fragment>\n                  )}\n                </tr>\n              </tbody>\n              <tfoot>\n                <tr>\n                  <th>Total de Faltas: {getAttendance(student)}</th>\n                </tr>\n                <tr>\n                  <th>\n                    {failedSubjects === 0\n                      ? \"Aprovado\"\n                      : failedSubjects === 1\n                      ? \"Recuperação em 1 disciplina\"\n                      : `Recuperação em ${failedSubjects} disciplinas`}\n                  </th>\n                </tr>\n              </tfoot>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <></>\n  );\n};\n\nexport default ReportCard;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport Options from \"./components/options/options.component\";\nimport Table from \"./components/table/table.component\";\nimport ReportCard from \"./components/report-card/report-card.component\";\n// import Minutes from \"./components/minutes/minutes.component\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Options />\n        <ReportCard />\n        <Table />\n\n        {/* Only active in the end of the school year */}\n        {/* <Minutes /> */}\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}