{"version":3,"sources":["utils/simpleCssClass.js","utils/simpleAttendanceClass.js","utils/abbreviations.js","utils/getFailedSubjects.js","utils/getAttendance.js","utils/filterMap.js","utils/getFailedSubjectNames.js","redux/options/updatePassedSubjects.js","utils/getNumber.js","utils/cssClass.js","utils/getGradesTotal.js","assets/images/brasao-df.png","assets/images/logo128.png","utils/generateMeetingMinutes.js","redux/options/optionActionTypes.js","redux/options/initialState.js","redux/options/optionsReducer.js","redux/rootReducer.js","redux/store.js","redux/options/optionActions.js","components/options/options.component.jsx","utils/shortenString.js","components/table-row/table-row.component.jsx","utils/getBimester.js","components/table/table.component.jsx","components/report-card/report-card.component.jsx","components/minute-card/minute-card.component.jsx","components/minutes/minutes.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","num","shorten","Biologia","Filosofia","História","Inglês","Matemática","Química","Arte","Física","Geografia","Espanhol","Sociologia","lengthen","bio","edf","enr","fil","his","ing","lp","mat","pd1","qui","art","enr2","fis","geo","esp","pd2","pd3","pd4","soc","student","grades","count","Object","keys","forEach","subject","test","bim","filter","el","length","average","index","reduce","acc","cur","getNumber","require","studentObject","values","map","getFailedSubjects","mode","failedSubjects","res","push","ongoingCases","payload","code","status","newStudent","passed","includes","findIndex","splice","string","isNaN","key","value","avg","gradeTotals","grade","getFailedSubjectNames","date","Date","year","getFullYear","day","getDate","month","getMonth","abbrev","por","baseText","replace","hora","allStudentsArray","studentsToFix","bodyText","turno","shift","toLowerCase","name","suffix","sex","toFix","find","veredict","failedSubjectNames","passedSubjects","join","sub","console","log","optionActionTypes","SET_GROUP","SET_GRADE","SET_CURRENT_STUDENT_INDEX","SET_REPORT_CARD_OPEN","SET_FILTER_MODE","SET_ONGOING_CASES","UPDATE_VEREDICT","UPDATE_PASSED_SUBJECT","allGrades","studentSets","sort","groupsByGrade","firstGroup","updatePassedSubjects","initialState","group","currentStudentIndex","reportCardOpen","filterMode","optionsReducer","state","type","actionTypes","newVeredicts","newOngoingCases","combineReducers","options","middlewares","logger","store","createStore","rootReducer","applyMiddleware","setGroup","setReportCardOpen","open","Options","useState","useSelector","changeGroup","changeGrade","changeFilter","dispatch","useDispatch","className","htmlFor","onChange","e","currentGrade","target","setGrade","groupName","split","currentFilter","shortenString","len","substring","TableRow","rec","headers","assign","NAME","F","getAttendance","getGradesTotal","handleClick","parentNode","children","innerText","Array","from","document","querySelectorAll","row","classList","contains","setCurrentStudentIndex","onClick","cssClass","toFixed","getBimester","firstStudentGrades","bimesters","Math","max","Table","currentMap","reportCards","reportCard","filteredMap","filterMap","unshift","bimester","header","ReportCard","setIndex","setOpen","blocks","block","maxIndex","subByBlock","1","2","handleClose","targetID","id","handleChevron","operation","i","handleKeyUp","useEffect","window","addEventListener","removeEventListener","onKeyUp","src","logo","alt","brasao","birthdate","schoolYear","rowSpan","colSpan","simpleCssClass","simpleAttendanceClass","Fragment","MinuteCard","handleSetGroupState","handleVeredict","attendance","checked","defaultValue","updatePassedSubjectsUtil","Minutes","currentGroupData","groupState","setGroupState","ongoing","newGroupState","setHora","placeholder","failedSubjectsCount","alert","filename","data","blob","Blob","oneTimeOnly","navigator","msSaveOrOpenBlob","msSaveBlob","elem","createElement","href","URL","createObjectURL","download","body","appendChild","click","removeChild","save","generateMeetingMinutes","trim","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c7c6fc9d.chunk.js","sourcesContent":["const simpleCssClass = (num) => {\n  if (num < 3) {\n    return \"ii\";\n  } else if (num < 4.75) {\n    return \"mi\";\n  } else if (num < 5) {\n    return \"mm\";\n  } else if (num < 7) {\n    return \"ms\";\n  } else if (num <= 10) {\n    return \"ss\";\n  } else {\n    return \"\";\n  }\n};\n\nmodule.exports = simpleCssClass;\n","const simpleCssClass = (num) => {\n  if (num < 3) {\n    return \"ss\";\n  } else if (num < 4) {\n    return \"ms\";\n  } else if (num < 6) {\n    return \"mm\";\n  } else if (num < 9) {\n    return \"mi\";\n  } else if (num >= 9) {\n    return \"ii\";\n  } else {\n    return \"\";\n  }\n};\n\nmodule.exports = simpleCssClass;\n","module.exports.shorten = {\n  Biologia: 'bio',\n  'Educação Física': 'edf',\n  'Ensino Religioso': 'enr',\n  Filosofia: 'fil',\n  História: 'his',\n  Inglês: 'ing',\n  'Língua Portuguesa': 'lp',\n  Matemática: 'mat',\n  'Projeto Interdisciplinar I': 'pd1',\n  Química: 'qui',\n  Arte: 'art',\n  'Ensino Religioso II': 'enr2',\n  Física: 'fis',\n  Geografia: 'geo',\n  Espanhol: 'esp',\n  'Projeto Interdisciplinar II': 'pd2',\n  'Projeto Interdisciplinar III': 'pd3',\n  'Projeto Interdisciplinar IV': 'pd4',\n  Sociologia: 'soc',\n};\n\nmodule.exports.lengthen = {\n  bio: 'Biologia',\n  edf: 'Educação Física',\n  enr: 'Ensino Religioso',\n  fil: 'Filosofia',\n  his: 'História',\n  ing: 'Inglês',\n  lp: 'Língua Portuguesa',\n  mat: 'Matemática',\n  pd1: 'Projeto Interdisciplinar I',\n  qui: 'Química',\n  art: 'Arte',\n  enr2: 'Ensino Religioso II',\n  fis: 'Física',\n  geo: 'Geografia',\n  esp: 'Espanhol',\n  pd2: 'Projeto Interdisciplinar II',\n  pd3: 'Projeto Interdisciplinar III',\n  pd4: 'Projeto Interdisciplinar IV',\n  soc: 'Sociologia',\n};\n","const getFailedSubjects = (student) => {\n  const grades = student.grades;\n  let count = 0;\n\n  Object.keys(grades).forEach((subject) => {\n    if (!/pd/.test(subject)) {\n      let bim = grades[subject].filter((el) => el !== \"-\").length / 2;\n      let values = grades[subject].filter(\n        (el, index) => el !== \"-\" && index % 2 === 0\n      );\n      let average = values.reduce((acc, cur) => acc + cur * 1, 0);\n      average /= bim;\n\n      if (average < 4.75) {\n        count += 1;\n      }\n    }\n  });\n\n  return count;\n};\n\nmodule.exports = getFailedSubjects;\n","const getNumber = require(\"./getNumber\");\n\nconst getAttendance = (studentObject) => {\n  const grades = Object.values(studentObject.grades);\n\n  const attendanceArray = grades.map(\n    (subject) =>\n      getNumber(subject[1]) +\n      getNumber(subject[3]) +\n      getNumber(subject[5]) +\n      getNumber(subject[7])\n  );\n\n  const attendanceCount = attendanceArray.reduce((acc, cur) => acc + cur, 0);\n\n  return attendanceCount;\n};\n\nmodule.exports = getAttendance;\n","const getFailedSubjects = require(\"./getFailedSubjects\");\n\nconst filterMap = (map, mode) => {\n  switch (mode) {\n    case \"none\":\n      return map;\n    case \"passed\":\n      return map.filter((el) => getFailedSubjects(el) === 0);\n    case \"ongoing\":\n      return map.filter((el) => getFailedSubjects(el) > 0);\n    case \"rec\":\n      return map.filter((el) => {\n        const failedSubjects = getFailedSubjects(el);\n        return failedSubjects > 0 && failedSubjects < 4;\n      });\n    case \"failed\":\n      return map.filter((el) => getFailedSubjects(el) > 4);\n    default:\n      return map;\n  }\n};\n\nmodule.exports = filterMap;\n","const getFailedSubjects = (student) => {\n  const grades = student.grades;\n  let res = [];\n\n  Object.keys(grades).forEach((subject) => {\n    if (!/pd/.test(subject)) {\n      let bim = grades[subject].filter((el) => el !== \"-\").length / 2;\n      let values = grades[subject].filter(\n        (el, index) => el !== \"-\" && index % 2 === 0\n      );\n      let average = values.reduce((acc, cur) => acc + cur * 1, 0);\n      average /= bim;\n\n      if (average < 4.75) {\n        res.push(subject);\n      }\n    }\n  });\n\n  return res;\n};\n\nmodule.exports = getFailedSubjects;\n","const updatePassedSubjects = (ongoingCases, payload) => {\n  let newOngoingCases = [...ongoingCases].map((student) => {\n    let { code, subject, status } = payload;\n\n    if (student.code === code) {\n      let newStudent = { ...student },\n        passed = newStudent.passed;\n      if (status === \"ap\") {\n        if (!passed) {\n          passed = [subject];\n        } else if (!passed.includes(subject)) {\n          passed.push(subject);\n        }\n        return {\n          ...newStudent,\n          passed,\n        };\n      } else if (status === \"rep\") {\n        if (!passed) {\n          return student;\n        } else {\n          let index = passed.findIndex((el) => el === subject);\n          passed.splice(index, 1);\n        }\n\n        return {\n          ...newStudent,\n          passed,\n        };\n      }\n    }\n\n    return student;\n  });\n\n  return newOngoingCases;\n};\n\nmodule.exports = updatePassedSubjects;\n","const getNumber = (string) => (isNaN(string * 1) ? 0 : string * 1);\n\nmodule.exports = getNumber;\n","const cssClass = (key, value, student) => {\n  if (key === \"NOME\") {\n    return \"text\";\n  }\n\n  const bim = student.grades[key].filter((el) => el !== \"-\").length / 2;\n\n  let avg = (value * 1 || 0) / bim;\n\n  if (avg < 3 || isNaN(avg)) {\n    return \"ii\";\n  } else if (avg < 4.75) {\n    return \"mi\";\n  } else if (avg < 5) {\n    return \"mm\";\n  } else if (avg < 7) {\n    return \"ms\";\n  } else {\n    return \"ss\";\n  }\n};\n\nmodule.exports = cssClass;\n","const getNumber = require(\"./getNumber\");\n\nconst getGradesTotal = (student) => {\n  const grades = student.grades;\n\n  const gradeTotals = {};\n\n  Object.keys(grades).forEach((grade) => {\n    gradeTotals[grade] =\n      getNumber(grades[grade][0]) +\n      getNumber(grades[grade][2]) +\n      getNumber(grades[grade][4]) +\n      getNumber(grades[grade][6]);\n  });\n\n  return gradeTotals;\n};\n\nmodule.exports = getGradesTotal;\n","module.exports = __webpack_public_path__ + \"static/media/brasao-df.790d8323.png\";","module.exports = __webpack_public_path__ + \"static/media/logo128.b40ec72d.png\";","const getFailedSubjectNames = require(\"./getFailedSubjectNames\");\nconst date = new Date();\nconst year = date.getFullYear();\nconst day = date.getDate();\nconst month = date.getMonth();\nconst allMonths = [\n  \"janeiro\",\n  \"fevereiro\",\n  \"março\",\n  \"abril\",\n  \"maio\",\n  \"junho\",\n  \"julho\",\n  \"agosto\",\n  \"setembro\",\n  \"outubro\",\n  \"novembro\",\n  \"dezembro\",\n];\n\nconst abbrev = {\n  art: \"arte\",\n  bio: \"biologia\",\n  edf: \"educação física\",\n  esp: \"espanhol\",\n  fil: \"filosofia\",\n  fis: \"física\",\n  geo: \"geografia\",\n  his: \"história\",\n  ing: \"inglês\",\n  por: \"português\",\n  lp: \"português\",\n  mat: \"matemática\",\n  qui: \"química\",\n  soc: \"sociologia\",\n};\n\nlet baseText =\n  \"%%DIA%% do mês de %%MES%% de %%ANO%%, às %%HORA%%, os professores do Centro de Ensino Médio 02 de Brazlândia do turno %%TURNO%% reuniram-se virtualmente com os coordenadores, a supervisão, a professora responsável pela sala de recursos generalista (SRG), o serviço de orientação educational (SOE) e a direção da instituição para a realização do conselho final de classe referente ao ano letivo de 2020. O resultado individuais dos estudantes da turma foram definidos conforme relacionado a seguir, sendo cada estudante designado por nome completo e código no sistema ieducar. \";\n\nbaseText = baseText\n  .replace(\"%%DIA%%\", day === 1 ? \"Ao primeiro dia\" : `Aos ${day} dias`)\n  .replace(\"%%MES%%\", allMonths[month])\n  .replace(\"%%ANO%%\", year);\n\nconst closingText =\n  \"Nada mais tendo a tratar, o conselho de classe final da presente turma foi encerrado e esta ata foi gerada para posterior assinatura dos participantes. Esta reunião foi gravada e a gravação estará disponível para sanar quaisquer dúvidas referentes aos resultados aqui definidos.\";\n\nconst generateMeetingMinutes = (hora, allStudentsArray, studentsToFix) => {\n  let bodyText = \"\";\n  let turno = allStudentsArray[0].shift.toLowerCase();\n\n  allStudentsArray.forEach((student) => {\n    let { name, code } = student;\n    let suffix = student.sex === \"F\" ? \"a\" : \"o\";\n    let toFix = studentsToFix.find((student) => student.code === code);\n\n    if (!toFix || toFix.veredict === \"ap\") {\n      bodyText += `${code} - ${name}: aprovad${suffix} (AP). `;\n    } else if (toFix.veredict === \"apc\") {\n      let passed = toFix.passed;\n      let failedSubjectNames = getFailedSubjectNames(student);\n      let passedSubjects = failedSubjectNames\n        .filter((el) => (passed && !passed.includes(el)) || !passed)\n        .join(\", \")\n        .replace(/, ([a-z]{3})$/, \" e $1\");\n\n      failedSubjectNames.forEach((sub) => {\n        passedSubjects = passedSubjects.replace(sub, abbrev[sub]);\n      });\n\n      bodyText += `${code} - ${name}: aprovad${suffix} via conselho em ${passedSubjects} (AP**). `;\n    } else if (toFix.veredict === \"rep\") {\n      let passed = toFix.passed;\n      let failedSubjectNames = getFailedSubjectNames(student);\n      let passedSubjects = failedSubjectNames\n        .filter((el) => (passed && !passed.includes(el)) || !passed)\n        .join(\", \")\n        .replace(/, ([a-z]{3})$/, \" e $1\");\n\n      failedSubjectNames.forEach((sub) => {\n        passedSubjects = passedSubjects.replace(sub, abbrev[sub]);\n      });\n\n      bodyText += `${code} - ${name}: reprovad${suffix} em ${passedSubjects} (REP). `;\n    } else {\n      console.log(\"Caso não tratado!\", code);\n    }\n  });\n\n  return (\n    baseText.replace(\"%%HORA%%\", hora).replace(\"%%TURNO%%\", turno) +\n    bodyText +\n    closingText\n  );\n};\n\nmodule.exports = generateMeetingMinutes;\n","const optionActionTypes = {\n  SET_GROUP: \"SET_GROUP\",\n  SET_GRADE: \"SET_GRADE\",\n  SET_CURRENT_STUDENT_INDEX: \"SET_CURRENT_STUDENT_INDEX\",\n  SET_REPORT_CARD_OPEN: \"SET_REPORT_CARD_OPEN\",\n  SET_FILTER_MODE: \"SET_FILTER_MODE\",\n  SET_ONGOING_CASES: \"SET_ONGOING_CASES\",\n  UPDATE_VEREDICT: \"UPDATE_VEREDICT\",\n  UPDATE_PASSED_SUBJECT: \"UPDATE_PASSED_SUBJECT\",\n};\n\nexport default optionActionTypes;\n","import reportCards from \"../../dev-data/reportCards.json\";\nimport studentSets from \"../../dev-data/studentSets.json\";\n\nconst allGrades = Object.keys(studentSets);\nallGrades.sort();\n\nconst groupsByGrade = studentSets;\n\nconst firstGroup = groupsByGrade[\"1\"][0];\n\nconst reportCardOpen = false;\n\nconst currentStudentIndex = 0;\n\nconst filterMode = \"none\";\n\nconst ongoingCases = [];\n\nexport {\n  allGrades,\n  groupsByGrade,\n  firstGroup,\n  reportCards,\n  currentStudentIndex,\n  reportCardOpen,\n  filterMode,\n  ongoingCases,\n};\n","import actionTypes from \"./optionActionTypes\";\nimport {\n  allGrades,\n  firstGroup,\n  currentStudentIndex,\n  reportCardOpen,\n  filterMode,\n  ongoingCases,\n} from \"./initialState\";\n\nconst updatePassedSubjects = require(\"./updatePassedSubjects\");\n\nconst initialState = {\n  grade: allGrades[0],\n  group: firstGroup,\n  currentStudentIndex,\n  reportCardOpen,\n  filterMode,\n  ongoingCases,\n};\n\nconst optionsReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case actionTypes.SET_GRADE:\n      return {\n        ...state,\n        grade: payload,\n      };\n    case actionTypes.SET_GROUP:\n      return {\n        ...state,\n        group: payload,\n      };\n    case actionTypes.SET_CURRENT_STUDENT_INDEX:\n      return {\n        ...state,\n        currentStudentIndex: payload,\n      };\n    case actionTypes.SET_REPORT_CARD_OPEN:\n      return {\n        ...state,\n        reportCardOpen: payload,\n      };\n    case actionTypes.SET_FILTER_MODE:\n      return {\n        ...state,\n        filterMode: payload,\n      };\n    case actionTypes.SET_ONGOING_CASES:\n      return {\n        ...state,\n        ongoingCases: payload,\n      };\n    case actionTypes.UPDATE_VEREDICT:\n      let newVeredicts = [...state.ongoingCases].map((student) => {\n        let { code, veredict } = payload;\n        if (student.code === code) {\n          let newStudent = { ...student };\n\n          return {\n            ...newStudent,\n            veredict,\n          };\n        }\n        return student;\n      });\n\n      return {\n        ...state,\n        ongoingCases: newVeredicts,\n      };\n    case actionTypes.UPDATE_PASSED_SUBJECT:\n      let newOngoingCases = updatePassedSubjects(state.ongoingCases, payload);\n\n      return {\n        ...state,\n        ongoingCases: newOngoingCases,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default optionsReducer;\n","import { combineReducers } from \"redux\";\nimport optionsReducer from \"./options/optionsReducer\";\n\nexport default combineReducers({\n  options: optionsReducer,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { logger } from \"redux-logger\";\nimport rootReducer from \"./rootReducer\";\n\nconst middlewares = [logger];\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nexport default store;\n","import actionTypes from \"./optionActionTypes\";\n\nexport const setGroup = (group) => ({\n  type: actionTypes.SET_GROUP,\n  payload: group,\n});\n\nexport const setGrade = (grade) => ({\n  type: actionTypes.SET_GRADE,\n  payload: grade,\n});\n\nexport const setCurrentStudentIndex = (index) => ({\n  type: actionTypes.SET_CURRENT_STUDENT_INDEX,\n  payload: index,\n});\n\nexport const setReportCardOpen = (open) => ({\n  type: actionTypes.SET_REPORT_CARD_OPEN,\n  payload: open,\n});\n\nexport const setFilterMode = (mode) => ({\n  type: actionTypes.SET_FILTER_MODE,\n  payload: mode,\n});\n\nexport const setOngoingCases = (cases) => ({\n  type: actionTypes.SET_ONGOING_CASES,\n  payload: cases,\n});\n\nexport const updateVeredict = (veredict) => ({\n  type: actionTypes.UPDATE_VEREDICT,\n  payload: veredict,\n});\n\nexport const updatePassedSubjects = (subject) => ({\n  type: actionTypes.UPDATE_PASSED_SUBJECT,\n  payload: subject,\n});\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setGroup,\n  setGrade,\n  setFilterMode,\n} from \"../../redux/options/optionActions\";\n\nimport { allGrades, groupsByGrade } from \"../../redux/options/initialState\";\n\nimport \"./options.styles.scss\";\n\nconst Options = () => {\n  let [group, changeGroup] = useState(\n    useSelector((state) => state.options.group)\n  );\n\n  let [grade, changeGrade] = useState(\n    useSelector((state) => state.options.grade)\n  );\n\n  let [filter, changeFilter] = useState(\n    useSelector((state) => state.options.filterMode)\n  );\n\n  const dispatch = useDispatch();\n\n  const handleChangeGroup = (e) => {\n    changeGroup(e.target.value);\n    dispatch(setGroup(e.target.value));\n  };\n\n  const handleChangeGrade = (e) => {\n    const currentGrade = e.target.value;\n    changeGrade(currentGrade);\n    dispatch(setGrade(currentGrade));\n    const firstGroup = groupsByGrade[currentGrade][0];\n    changeGroup(firstGroup);\n    dispatch(setGroup(firstGroup));\n  };\n\n  const handleChangeFilter = (e) => {\n    const currentFilter = e.target.value;\n    changeFilter(currentFilter);\n    dispatch(setFilterMode(currentFilter));\n  };\n\n  return (\n    <div className=\"options-container\">\n      <div className=\"title\">\n        <h1>\n          Mapa de Notas &mdash; {grade}º ano &mdash; {group}\n        </h1>\n      </div>\n      <div className=\"options\">\n        <div className=\"option\">\n          <label htmlFor=\"grade\">Série: </label>\n          <select name=\"grade\" value={grade} onChange={handleChangeGrade}>\n            {allGrades.map((grade) => (\n              <option value={grade} key={`grade-${grade}`}>\n                {grade}ª\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"option\">\n          <label htmlFor=\"group\">Turma: </label>\n          <select name=\"group\" value={group} onChange={handleChangeGroup}>\n            {groupsByGrade[grade].map((groupName) => (\n              <option\n                value={groupName}\n                key={`group-${groupName.split(\" \")[0]}`}\n              >\n                {groupName}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"option\">\n          <label htmlFor=\"filter\">Filtro: </label>\n          <select name=\"filter\" value={filter} onChange={handleChangeFilter}>\n            <option value=\"none\">Nenhum</option>\n            <option value=\"passed\">Aprovados</option>\n            <option value=\"ongoing\">Não Aprovados</option>\n            <option value=\"rec\">Em Recuperação</option>\n            <option value=\"failed\">Reprovados</option>\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Options;\n","const shortenString = (string, len) => {\n  if (len >= string.length) return string;\n  return string.substring(0, len);\n};\n\nexport default shortenString;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  setCurrentStudentIndex,\n  setReportCardOpen,\n} from \"../../redux/options/optionActions\";\n\nimport \"./table-row.styles.scss\";\n\nimport cssClass from \"../../utils/cssClass\";\nimport shortenString from \"../../utils/shortenString\";\nimport getAttendance from \"../../utils/getAttendance\";\nimport getGradesTotal from \"../../utils/getGradesTotal\";\nimport getFailedSubjects from \"../../utils/getFailedSubjects\";\n\nconst recCssClass = (rec) =>\n  rec === 0\n    ? \"ss\"\n    : rec === 1\n    ? \"ms\"\n    : rec === 2\n    ? \"mm\"\n    : rec === 3\n    ? \"mi\"\n    : \"ii\";\n\nconst TableRow = ({ student, headers }) => {\n  const studentObject = Object.assign(\n    { NAME: student.name, F: getAttendance(student) },\n    getGradesTotal(student)\n  );\n\n  const dispatch = useDispatch();\n\n  const handleClick = (e) => {\n    const target = e.target.parentNode;\n    const name = target.children[0].innerText;\n\n    const rowsArray = Array.from(document.querySelectorAll(\"tbody tr\"))\n      .map((row) => row.children[0])\n      .filter((row) => row.classList.contains(\"NOME\"))\n      .map((row) => row.innerText);\n\n    const index = rowsArray.findIndex((el) => name === el);\n\n    dispatch(setCurrentStudentIndex(index));\n    dispatch(setReportCardOpen(true));\n  };\n\n  return (\n    <tr>\n      {headers\n        .map((el) =>\n          el !== \"F\" && !/(PD1|PD3)/.test(el) ? (\n            <td\n              onClick={handleClick}\n              className={`${el === \"NOME\" ? el : \"sub\"} ${cssClass(\n                el,\n                studentObject[el],\n                student\n              )}`}\n              key={`sd-${student.code}-${el}`}\n            >\n              {el === \"NOME\"\n                ? shortenString(student[\"name\"], 30)\n                : studentObject[el].toFixed(2)}\n            </td>\n          ) : (\n            \"\" // TODO: Exchange \"\" for attendance with css classes\n          )\n        )\n        .filter((el) => el !== \"\")}\n      <td\n        className={`sub ${recCssClass(getFailedSubjects(student))}`}\n        key={`sd-${student.code}-REC`}\n      >\n        {getFailedSubjects(student)}\n      </td>\n    </tr>\n  );\n};\n\nexport default TableRow;\n","const getBimester = (group) => {\n  const firstStudentGrades = group[0].grades;\n\n  const annuals = [\"edf\", \"lp\", \"mat\"];\n  const bimesters = annuals.map(\n    (subject) => firstStudentGrades[subject].length\n  );\n\n  return Math.max(...bimesters) / 2;\n};\n\nexport default getBimester;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport TableRow from \"../table-row/table-row.component\";\n\nimport reportCards from \"../../dev-data/reportCards.json\";\n\nimport getBimester from \"../../utils/getBimester\";\nimport filterMap from \"../../utils/filterMap\";\n\nimport \"./table.styles.scss\";\n\nconst Table = () => {\n  const { group, filterMode } = useSelector((state) => state.options);\n\n  const currentMap = reportCards.filter(\n    (reportCard) => reportCard.group === group\n  );\n\n  const filteredMap = filterMap(currentMap, filterMode);\n\n  const headers = Object.keys(filteredMap[0].grades);\n  headers.sort();\n  headers.unshift(\"NOME\");\n  headers.push(\"F\");\n\n  const bimester = getBimester(filteredMap);\n\n  return (\n    <div className=\"table-container\">\n      <table className=\"table\">\n        <thead className=\"table--head\">\n          <tr>\n            {headers\n              .filter((el) => !/(PD1|PD3)/.test(el))\n              .map((header) =>\n                header !== \"F\" ? (\n                  <th\n                    key={`head-${header}`}\n                    className={header === \"NOME\" ? `head ${header}` : \"sub\"}\n                  >\n                    {header}\n                  </th>\n                ) : (\n                  \"\"\n                )\n              )\n              .filter((el) => el !== \"\")}\n            <th key={`head-REC`} className=\"sub\">\n              REC\n            </th>\n          </tr>\n        </thead>\n        <tbody className=\"table--body\">\n          {filteredMap.map((student) => (\n            <TableRow\n              student={student}\n              headers={headers}\n              bimester={bimester}\n              key={`student-${student.code}`}\n            />\n          ))}\n        </tbody>\n        <tfoot className=\"table--head\">\n          <tr>\n            {headers\n              .filter((el) => !/(PD1|PD3)/.test(el))\n              .map((header) =>\n                header !== \"F\" ? (\n                  <th\n                    key={`head-${header}`}\n                    className={header === \"NOME\" ? `head ${header}` : \"sub\"}\n                  >\n                    {header}\n                  </th>\n                ) : (\n                  \"\"\n                )\n              )\n              .filter((el) => el !== \"\")}\n            <th key={`head-REC`} className=\"sub\">\n              REC\n            </th>\n          </tr>\n        </tfoot>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setReportCardOpen } from \"../../redux/options/optionActions\";\n\nimport reportCards from \"../../dev-data/reportCards.json\";\nimport { lengthen } from \"../../utils/abbreviations\";\nimport simpleCssClass from \"../../utils/simpleCssClass\";\nimport simpleAttendanceClass from \"../../utils/simpleAttendanceClass\";\nimport getAttendance from \"../../utils/getAttendance\";\nimport getFailedSubjects from \"../../utils/getFailedSubjects\";\n\nimport brasao from \"../../assets/images/brasao-df.png\";\nimport logo from \"../../assets/images/logo128.png\";\n\nimport filterMap from \"../../utils/filterMap\";\n\nimport \"./report-card.styles.scss\";\n\nconst ReportCard = () => {\n  const dispatch = useDispatch();\n\n  const {\n    group,\n    reportCardOpen,\n    currentStudentIndex,\n    filterMode,\n  } = useSelector((state) => state.options);\n\n  const [index, setIndex] = useState(0);\n\n  const [open, setOpen] = useState(\n    useSelector((state) => state.options.reportCardOpen)\n  );\n\n  const currentMap = reportCards.filter(\n    (reportCard) => reportCard.group === group\n  );\n\n  const filteredMap = filterMap(currentMap, filterMode);\n\n  const blocks = filteredMap[0].block;\n  const maxIndex = filteredMap.length - 1;\n\n  const subByBlock = {\n    1: [\"bio\", \"fil\", \"his\", \"ing\", \"qui\"],\n    2: [\"art\", \"esp\", \"fis\", \"geo\", \"soc\", \"pd2\"],\n  };\n\n  let student = filteredMap[index];\n  let failedSubjects = getFailedSubjects(student);\n\n  const handleClose = (e) => {\n    const targetID = e.target.id;\n    if (targetID !== \"report-card-container\" && targetID !== \"close-button\") {\n      return;\n    }\n    setIndex(0);\n    dispatch(setReportCardOpen(false));\n  };\n\n  const handleChevron = (operation) => {\n    const i = index;\n    if (operation === \"+\" && index < maxIndex) {\n      setIndex(i + 1);\n    } else if (operation === \"-\" && index > 0) {\n      setIndex(i - 1);\n    }\n\n    failedSubjects = getFailedSubjects(student);\n  };\n\n  const handleKeyUp = (e) => {\n    if (e.key === \"ArrowRight\") {\n      handleChevron(\"+\");\n    } else if (e.key === \"ArrowLeft\") {\n      handleChevron(\"-\");\n    } else if (e.key === \"Escape\") {\n      setOpen(false);\n      dispatch(setReportCardOpen(open));\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keyup\", handleKeyUp, false);\n\n    return () => {\n      window.removeEventListener(\"keyup\", handleKeyUp);\n    };\n  });\n\n  useEffect(() => {\n    setIndex(currentStudentIndex);\n  }, [currentStudentIndex]);\n\n  return (\n    <div\n      className={`report-card-container ${reportCardOpen ? \"\" : \"closed\"}`}\n      id=\"report-card-container\"\n      onKeyUp={handleKeyUp}\n      onClick={handleClose}\n    >\n      <div className=\"report-card\">\n        <div className=\"close-button\" id=\"close-button\" onClick={handleClose}>\n          ✕\n        </div>\n        <div className=\"chevron-right\" onClick={() => handleChevron(\"+\")}>\n          ❱\n        </div>\n        <div className=\"chevron-left\" onClick={() => handleChevron(\"-\")}>\n          ❰\n        </div>\n        <div className=\"report-card--data\">\n          <div className=\"heading\">\n            <div className=\"image-container\">\n              <img src={logo} alt=\"Brsão do \" />\n            </div>\n            <h3>\n              Governo do Distrito Federal\n              <br />\n              Secretaria de Estado de Educação\n              <br />\n              Coordenação Regional de ensino de Brazlândia\n              <br />\n              Centro de Ensino Médio 02\n            </h3>\n            <div className=\"image-container\">\n              <img src={brasao} alt=\"Brsão do \" />\n            </div>\n          </div>\n          <div className=\"student-data\">\n            <p>Nome: {student.name} </p>\n            <p>Nascimento: {student.birthdate} </p>\n            <p>Série: {student.schoolYear}ª série</p>\n            <p>Turma: {student.group} </p>\n          </div>\n          <div className=\"grades-data\">\n            <table>\n              <thead>\n                <tr>\n                  <th rowSpan=\"2\" className=\"disciplinas\">\n                    BLOCO {blocks[0]}\n                  </th>\n                  <th colSpan=\"2\">1º Bimestre</th>\n                  <th colSpan=\"2\">2º Bimestre</th>\n                  <th rowSpan=\"2\" className=\"disciplinas\">\n                    BLOCO {blocks[1]}\n                  </th>\n                  <th colSpan=\"2\">3º Bimestre</th>\n                  <th colSpan=\"2\">4º Bimestre</th>\n                </tr>\n                <tr>\n                  <th className=\"coluna\">Notas</th>\n                  <th className=\"coluna\">Faltas</th>\n                  <th className=\"coluna\">Notas</th>\n                  <th className=\"coluna\">Faltas</th>\n                  <th className=\"coluna\">Notas</th>\n                  <th className=\"coluna\">Faltas</th>\n                  <th className=\"coluna\">Notas</th>\n                  <th className=\"coluna\">Faltas</th>\n                </tr>\n              </thead>\n              <tbody>\n                {/* {[0, 1, 2, 3, 4, 5].map((i) => (\n                  <tr>\n                    {blocks.map((block) => {\n                      return (\n                        <React.Fragment>\n                          <td className=\"disciplinas\">\n                            {lengthen[subByBlock[block][i]]}\n                          </td>\n                          {student.grades[subByBlock[block][i]].map((data) => (\n                            <td className={`coluna ${simpleCssClass(data)}`}>\n                              {data}\n                            </td>\n                          ))}\n                        </React.Fragment>\n                      );\n                    })}\n                  </tr>\n                ))} */}\n                <tr>\n                  <td className=\"disciplinas\"> {lengthen[\"edf\"]} </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[\"edf\"][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"edf\"][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[\"edf\"][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"edf\"][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[\"edf\"][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"edf\"][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[\"edf\"][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"edf\"][3] || \"-\"}\n                  </td>\n                  <td className=\"disciplinas\">{lengthen[\"edf\"]}</td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[\"edf\"][4] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"edf\"][4] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[\"edf\"][5] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"edf\"][5] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[\"edf\"][6] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"edf\"][6] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[\"edf\"][7] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"edf\"][7] || \"-\"}\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"disciplinas\">{lengthen[\"lp\"]}</td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[\"lp\"][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"lp\"][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[\"lp\"][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"lp\"][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[\"lp\"][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"lp\"][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[\"lp\"][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"lp\"][3] || \"-\"}\n                  </td>\n                  <td className=\"disciplinas\">{lengthen[\"lp\"]}</td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[\"lp\"][4] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"lp\"][4] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[\"lp\"][5] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"lp\"][5] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[\"lp\"][6] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"lp\"][6] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[\"lp\"][7] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"lp\"][7] || \"-\"}\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"disciplinas\">{lengthen[\"mat\"]}</td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[\"mat\"][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"mat\"][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[\"mat\"][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"mat\"][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[\"mat\"][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"mat\"][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[\"mat\"][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"mat\"][3] || \"-\"}\n                  </td>\n                  <td className=\"disciplinas\">{lengthen[\"mat\"]}</td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[\"mat\"][4] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"mat\"][4] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[\"mat\"][5] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"mat\"][5] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[\"mat\"][6] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"mat\"][6] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[\"mat\"][7] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[\"mat\"][7] || \"-\"}\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"disciplinas\">\n                    {lengthen[subByBlock[blocks[0]][0]]}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[0]][0]][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][0]][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[0]][0]][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][0]][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[0]][0]][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][0]][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[0]][0]][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][0]][3] || \"-\"}\n                  </td>\n                  <td className=\"disciplinas\">\n                    {lengthen[subByBlock[blocks[1]][0]]}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[1]][0]][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][0]][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[1]][0]][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][0]][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[1]][0]][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][0]][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[1]][0]][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][0]][3] || \"-\"}\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"disciplinas\">\n                    {lengthen[subByBlock[blocks[0]][1]]}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[0]][1]][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][1]][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[0]][1]][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][1]][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[0]][1]][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][1]][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[0]][1]][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][1]][3] || \"-\"}\n                  </td>\n                  <td className=\"disciplinas\">\n                    {lengthen[subByBlock[blocks[1]][1]]}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[1]][1]][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][1]][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[1]][1]][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][1]][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[1]][1]][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][1]][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[1]][1]][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][1]][3] || \"-\"}\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"disciplinas\">\n                    {lengthen[subByBlock[blocks[0]][2]]}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[0]][2]][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][2]][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[0]][2]][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][2]][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[0]][2]][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][2]][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[0]][2]][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][2]][3] || \"-\"}\n                  </td>\n                  <td className=\"disciplinas\">\n                    {lengthen[subByBlock[blocks[1]][2]]}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[1]][2]][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][2]][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[1]][2]][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][2]][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[1]][2]][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][2]][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[1]][2]][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][2]][3] || \"-\"}\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"disciplinas\">\n                    {lengthen[subByBlock[blocks[0]][3]]}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[0]][3]][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][3]][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[0]][3]][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][3]][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[0]][3]][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][3]][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[0]][3]][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][3]][3] || \"-\"}\n                  </td>\n                  <td className=\"disciplinas\">\n                    {lengthen[subByBlock[blocks[1]][3]]}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[1]][3]][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][3]][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[1]][3]][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][3]][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[1]][3]][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][3]][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[1]][3]][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][3]][3] || \"-\"}\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"disciplinas\">\n                    {lengthen[subByBlock[blocks[0]][4]]}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[0]][4]][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][4]][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[0]][4]][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][4]][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[0]][4]][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][4]][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[0]][4]][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[0]][4]][3] || \"-\"}\n                  </td>\n                  <td className=\"disciplinas\">\n                    {lengthen[subByBlock[blocks[1]][4]]}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[1]][4]][0] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][4]][0] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[1]][4]][1] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][4]][1] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleCssClass(\n                      student.grades[subByBlock[blocks[1]][4]][2] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][4]][2] || \"-\"}\n                  </td>\n                  <td\n                    className={`coluna ${simpleAttendanceClass(\n                      student.grades[subByBlock[blocks[1]][4]][3] || \"-\"\n                    )}`}\n                  >\n                    {student.grades[subByBlock[blocks[1]][4]][3] || \"-\"}\n                  </td>\n                </tr>\n                <tr>\n                  {!subByBlock[blocks[0]][5] ? (\n                    <React.Fragment>\n                      <td className=\"disciplinas\"></td>\n                      <td className=\"coluna\">-</td>\n                      <td className=\"coluna\">-</td>\n                      <td className=\"coluna\">-</td>\n                      <td className=\"coluna\">-</td>\n                      <td className=\"disciplinas\">\n                        {lengthen[subByBlock[blocks[1]][5]] || \"\"}\n                      </td>\n                      <td\n                        className={`coluna ${simpleCssClass(\n                          student.grades[subByBlock[blocks[1]][5]][0] || \"-\"\n                        )}`}\n                      >\n                        {student.grades[subByBlock[blocks[1]][5]][0] || \"-\"}\n                      </td>\n                      <td\n                        className={`coluna ${simpleAttendanceClass(\n                          student.grades[subByBlock[blocks[1]][5]][1] || \"-\"\n                        )}`}\n                      >\n                        {student.grades[subByBlock[blocks[1]][5]][1] || \"-\"}\n                      </td>\n                      <td\n                        className={`coluna ${simpleCssClass(\n                          student.grades[subByBlock[blocks[1]][5]][2] || \"-\"\n                        )}`}\n                      >\n                        {student.grades[subByBlock[blocks[1]][5]][2] || \"-\"}\n                      </td>\n                      <td\n                        className={`coluna ${simpleAttendanceClass(\n                          student.grades[subByBlock[blocks[1]][5]][3] || \"-\"\n                        )}`}\n                      >\n                        {student.grades[subByBlock[blocks[1]][5]][3] || \"-\"}\n                      </td>\n                    </React.Fragment>\n                  ) : (\n                    <React.Fragment>\n                      <td className=\"disciplinas\">\n                        {lengthen[subByBlock[blocks[0]][5]] || \"\"}\n                      </td>\n                      <td\n                        className={`coluna ${simpleCssClass(\n                          student.grades[subByBlock[blocks[0]][5]][0] || \"-\"\n                        )}`}\n                      >\n                        {student.grades[subByBlock[blocks[0]][5]][0] || \"-\"}\n                      </td>\n                      <td\n                        className={`coluna ${simpleAttendanceClass(\n                          student.grades[subByBlock[blocks[0]][5]][1] || \"-\"\n                        )}`}\n                      >\n                        {student.grades[subByBlock[blocks[0]][5]][1] || \"-\"}\n                      </td>\n                      <td\n                        className={`coluna ${simpleCssClass(\n                          student.grades[subByBlock[blocks[0]][5]][2] || \"-\"\n                        )}`}\n                      >\n                        {student.grades[subByBlock[blocks[0]][5]][2] || \"-\"}\n                      </td>\n                      <td\n                        className={`coluna ${simpleAttendanceClass(\n                          student.grades[subByBlock[blocks[0]][5]][3] || \"-\"\n                        )}`}\n                      >\n                        {student.grades[subByBlock[blocks[0]][5]][3] || \"-\"}\n                      </td>\n                      <td className=\"disciplinas\"></td>\n                      <td className=\"coluna\">-</td>\n                      <td className=\"coluna\">-</td>\n                      <td className=\"coluna\">-</td>\n                      <td className=\"coluna\">-</td>\n                    </React.Fragment>\n                  )}\n                </tr>\n              </tbody>\n              <tfoot>\n                <tr>\n                  <th>Total de Faltas: {getAttendance(student)}</th>\n                </tr>\n                <tr>\n                  <th>\n                    {failedSubjects === 0\n                      ? \"Aprovado\"\n                      : failedSubjects === 1\n                      ? \"Recuperação em 1 disciplina\"\n                      : `Recuperação em ${failedSubjects} disciplinas`}\n                  </th>\n                </tr>\n              </tfoot>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportCard;\n","import React from \"react\";\n\nimport \"./minute-card.styles.scss\";\n\nimport getAttendance from \"../../utils/getAttendance\";\n\nconst MinuteCard = ({\n  student,\n  handleSetGroupState,\n  handleVeredict,\n  failedSubjects,\n}) => {\n  const attendance = getAttendance(student);\n  const { name, code, veredict } = student;\n\n  return (\n    <div className={`minute-card`}>\n      <h3 className=\"name\">\n        {name} ({code})\n      </h3>\n      <h4>Faltas: {attendance}</h4>\n      <div\n        className=\"veredict\"\n        // onChange={(e) => handleVeredict(code, e.target.value)}\n      >\n        <div className=\"form-group\">\n          <input\n            type=\"radio\"\n            name={`veredict-${code}`}\n            id={`veredict-${code}-rep`}\n            value=\"rep\"\n            checked={veredict === \"rep\"}\n            onChange={() => handleVeredict(code, \"rep\")}\n          />\n          <label htmlFor={`veredict-${code}-rep`}>REP</label>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"radio\"\n            name={`veredict-${code}`}\n            id={`veredict-${code}-ap`}\n            value=\"ap\"\n            checked={veredict === \"ap\"}\n            onChange={() => handleVeredict(code, \"ap\")}\n          />\n          <label htmlFor={`veredict-${code}-ap`}>AP</label>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"radio\"\n            name={`veredict-${code}`}\n            id={`veredict-${code}-apc`}\n            value=\"apc\"\n            checked={veredict === \"apc\"}\n            onChange={() => handleVeredict(code, \"apc\")}\n          />\n          <label htmlFor={`veredict-${code}-apc`}>AP**</label>\n        </div>\n      </div>\n      <div className=\"card-container\">\n        {failedSubjects.map((subject) => {\n          const key = `${code}-${subject}-card`;\n\n          return (\n            <div className=\"subject-card\" key={key}>\n              <h4>{subject}</h4>\n              <select\n                name={key}\n                id={key}\n                defaultValue=\"rep\"\n                onChange={(e) =>\n                  handleSetGroupState(code, subject, e.target.value)\n                }\n              >\n                <option value=\"ap\">Aprovado</option>\n                <option value=\"rep\">Reprovado</option>\n              </select>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MinuteCard;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  updatePassedSubjects,\n  updateVeredict,\n  setOngoingCases,\n} from \"../../redux/options/optionActions\";\n\nimport \"./minutes.styles.scss\";\n\nimport filterMap from \"../../utils/filterMap\";\nimport generateMeetingMinutes from \"../../utils/generateMeetingMinutes\";\nimport getFailedSubjectNames from \"../../utils/getFailedSubjectNames\";\nimport getFailedSubjects from \"../../utils/getFailedSubjects\";\n\nimport MinuteCard from \"../minute-card/minute-card.component\";\n\nimport reportCards from \"../../dev-data/reportCards.json\";\n\nconst updatePassedSubjectsUtil = require(\"../../redux/options/updatePassedSubjects\");\n\nconst Minutes = () => {\n  const { group } = useSelector((state) => state.options);\n\n  const currentGroupData = reportCards.filter(\n    (reportCard) => reportCard.group === group\n  );\n\n  let [groupState, setGroupState] = useState(\n    useSelector((state) => state.options.ongoingCases)\n  );\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const ongoing = filterMap(currentGroupData, \"ongoing\").map((student) => {\n      let veredict = \"rep\";\n      if (getFailedSubjects(student) < 3) {\n        veredict = \"apc\";\n      }\n      return {\n        veredict,\n        ...student,\n      };\n    });\n\n    setGroupState(ongoing);\n    dispatch(setOngoingCases(ongoing));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [group]);\n\n  const handleSetGroupState = (code, subject, status) => {\n    setGroupState(\n      updatePassedSubjectsUtil(groupState, {\n        code,\n        subject,\n        status,\n      })\n    );\n    dispatch(updatePassedSubjects({ code, subject, status }));\n  };\n\n  const handleVeredict = (code, payload) => {\n    const newGroupState = groupState.map((student) => {\n      if (student.code === code) {\n        return {\n          ...student,\n          veredict: payload,\n        };\n      }\n      return student;\n    });\n    setGroupState(newGroupState);\n    dispatch(updateVeredict({ code, veredict: payload }));\n  };\n\n  const [hora, setHora] = useState(\"\");\n\n  const handleHora = (e) => {\n    setHora(e.target.value);\n  };\n\n  const save = function (filename, data) {\n    var blob = new Blob([data], { type: \"text/csv\", oneTimeOnly: true });\n    if (window.navigator.msSaveOrOpenBlob) {\n      window.navigator.msSaveBlob(blob, filename);\n    } else {\n      var elem = window.document.createElement(\"a\");\n      elem.href = window.URL.createObjectURL(blob);\n      elem.download = filename;\n      document.body.appendChild(elem);\n      elem.click();\n      document.body.removeChild(elem);\n    }\n  };\n\n  return (\n    <div className=\"minutes-container\">\n      <div className=\"minutes\">\n        <h2>Ata &mdash; {group}</h2>\n        <div className=\"minutes-generator\">\n          <div className=\"hora\">\n            <label htmlFor=\"hora\">Horário de início</label>\n            <input\n              type=\"text\"\n              name=\"hora\"\n              id=\"hora\"\n              value={hora}\n              placeholder=\"digite o horário de início do conselho por extenso\"\n              onChange={handleHora}\n            />\n          </div>\n          <button\n            onClick={() => {\n              groupState.forEach((student) => {\n                let failedSubjectsCount = getFailedSubjects(student);\n                if (\n                  student.veredict === \"rep\" &&\n                  (failedSubjectsCount < 3 ||\n                    (student.passed &&\n                      failedSubjectsCount - student.passed.length < 3))\n                ) {\n                  return alert(\n                    \"Erro: existe algum estudante reprovado por menos de 3 disciplinas?\"\n                  );\n                }\n              });\n              return save(\n                `ATA FINAL - ${group}.txt`,\n                generateMeetingMinutes(\n                  hora.trim().toLowerCase(),\n                  currentGroupData,\n                  groupState\n                )\n              );\n            }}\n          >\n            Baixar Ata do Conselho\n          </button>\n        </div>\n        {groupState.map((student) => {\n          return (\n            <MinuteCard\n              student={student}\n              key={`minute-${student.code}`}\n              handleSetGroupState={handleSetGroupState}\n              handleVeredict={handleVeredict}\n              failedSubjects={getFailedSubjectNames(student)}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Minutes;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport Options from \"./components/options/options.component\";\nimport Table from \"./components/table/table.component\";\nimport ReportCard from \"./components/report-card/report-card.component\";\nimport Minutes from \"./components/minutes/minutes.component\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Options />\n        <ReportCard />\n        <Table />\n        <Minutes />\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}