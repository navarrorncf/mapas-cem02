{"version":3,"sources":["utils/parseData.js","utils/calcCssClass.js","redux/options/optionActionTypes.js","redux/options/initialState.js","redux/options/optionsReducer.js","redux/rootReducer.js","redux/store.js","redux/options/optionActions.js","components/options/options.component.jsx","utils/shortenString.js","components/table-row/table-row.component.jsx","components/table/table.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","data","allGrades","Set","allGroups","Object","keys","sort","allBimesters","values","group","grade","metadata","add","forEach","bim","groupsByGrade","push","toArray","set","Array","from","firstGroup","key","value","bimester","block","val","anualsubjects","subjectBlocks","1","2","avg","includes","optionActionTypes","SET_GROUP","SET_BIMESTER","SET_GRADE","parseData","initialState","currentMap","optionsReducer","state","type","payload","actionTypes","combineReducers","options","middlewares","logger","store","createStore","rootReducer","applyMiddleware","setGroup","Options","useState","useSelector","changeBimester","changeGroup","changeGrade","dispatch","useDispatch","className","htmlFor","name","onChange","e","currentGrade","target","setGrade","map","groupName","split","setBimester","shortenString","string","len","length","substring","TableRow","rec","student","headers","failedSubjects","el","calcCssClass","NUM","toFixed","filter","Table","studentsData","header","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.737a9a8a.chunk.js","sourcesContent":["const parseData = (data) => {\n  const allGrades = new Set();\n  const allGroups = Object.keys(data).sort();\n  const allBimesters = new Set();\n\n  for (let group of Object.values(data)) {\n    let grade = Object.values(group)[0].metadata.grade;\n    allGrades.add(grade);\n\n    let bimesters = Object.keys(group);\n    bimesters.forEach((bim) => allBimesters.add(bim));\n  }\n\n  const groupsByGrade = {};\n\n  Object.values(data).forEach((group) => {\n    const bim = Object.keys(group)[0];\n    const grade = group[bim].metadata.grade;\n    if (!groupsByGrade[grade]) {\n      groupsByGrade[grade] = [];\n    }\n\n    groupsByGrade[grade].push(group[bim].metadata.group);\n  });\n\n  const toArray = (set) => Array.from(set).sort();\n\n  return {\n    allGrades: toArray(allGrades),\n    allGroups,\n    allBimesters: toArray(allBimesters),\n    firstGroup: Object.values(data)[0],\n    groupsByGrade,\n  };\n};\n\nmodule.exports = parseData;\n","const calcCssClass = (key, value, bimester, block = \"1\") => {\n  const bim = bimester[0] * 1;\n\n  if (key === \"NUM\") {\n    return \"text num\";\n  } else if (key === \"NOME\") {\n    return \"text\";\n  } else if (key === \"FALTAS\") {\n    const val = value * 1;\n    if (val < bim * 15) {\n      return \"ss\";\n    } else if (val < bim * 30) {\n      return \"ms\";\n    } else if (val < bim * 50) {\n      return \"mi\";\n    }\n    return \"ii\";\n  }\n\n  const anualsubjects = [\"EDF\", \"LP\", \"MAT\"];\n  const subjectBlocks = {\n    1: [\"BIO\", \"FIL\", \"HIS\", \"ING\", \"QUI\", \"PD1\"],\n    2: [\"ART\", \"ESP\", \"FIS\", \"GEO\", \"SOC\", \"PD2\", \"PD3\"],\n  };\n\n  let avg = value * 1;\n\n  if (bim <= 2 || anualsubjects.includes(key)) {\n    avg /= bim;\n  } else if (bim === 4 || !subjectBlocks[block].includes(key)) {\n    avg /= 2;\n  }\n\n  if (avg < 3) {\n    return \"ii\";\n  } else if (avg < 4.75) {\n    return \"mi\";\n  } else if (avg < 5) {\n    return \"mm\";\n  } else if (avg < 7) {\n    return \"ms\";\n  } else {\n    return \"ss\";\n  }\n};\n\nmodule.exports = calcCssClass;\n","const optionActionTypes = {\n  SET_GROUP: \"SET_GROUP\",\n  SET_BIMESTER: \"SET_BIMESTER\",\n  SET_GRADE: \"SET_GRADE\",\n};\n\nexport default optionActionTypes;\n","import data from \"../../dev-data/output.json\";\nimport parseData from \"../../utils/parseData\";\n\nexport const {\n  allBimesters,\n  allGroups,\n  allGrades,\n  firstGroup,\n  groupsByGrade,\n} = parseData(data);\n","import actionTypes from \"./optionActionTypes\";\nimport { allBimesters, firstGroup } from \"./initialState\";\n\nconst initialState = {\n  grade: firstGroup[allBimesters[0]].metadata.grade,\n  group: firstGroup[allBimesters[0]].metadata.group,\n  bimester: Object.keys(firstGroup)[0],\n  currentMap: Object.values(firstGroup)[0],\n};\n\nconst optionsReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case actionTypes.SET_BIMESTER:\n      return {\n        ...state,\n        bimester: payload,\n      };\n    case actionTypes.SET_GRADE:\n      return {\n        ...state,\n        grade: payload,\n      };\n    case actionTypes.SET_GROUP:\n      return {\n        ...state,\n        group: payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default optionsReducer;\n","import { combineReducers } from \"redux\";\nimport optionsReducer from \"./options/optionsReducer\";\n\nexport default combineReducers({\n  options: optionsReducer,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { logger } from \"redux-logger\";\nimport rootReducer from \"./rootReducer\";\n\nconst middlewares = [logger];\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nexport default store;\n","import actionTypes from \"./optionActionTypes\";\n\nexport const setGroup = (group) => ({\n  type: actionTypes.SET_GROUP,\n  payload: group,\n});\n\nexport const setGrade = (grade) => ({\n  type: actionTypes.SET_GRADE,\n  payload: grade,\n});\n\nexport const setBimester = (bimester) => ({\n  type: actionTypes.SET_BIMESTER,\n  payload: bimester,\n});\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setBimester,\n  setGroup,\n  setGrade,\n} from \"../../redux/options/optionActions\";\n\nimport {\n  allBimesters,\n  allGrades,\n  groupsByGrade,\n} from \"../../redux/options/initialState\";\n\nimport \"./options.styles.scss\";\n\nconst Options = () => {\n  let [bimester, changeBimester] = useState(\n    useSelector((state) => state.options.bimester)\n  );\n\n  let [group, changeGroup] = useState(\n    useSelector((state) => state.options.group)\n  );\n\n  let [grade, changeGrade] = useState(\n    useSelector((state) => state.options.grade)\n  );\n\n  const dispatch = useDispatch();\n\n  const handleChangeBimester = (e) => {\n    changeBimester(e.target.value);\n    dispatch(setBimester(e.target.value));\n  };\n\n  const handleChangeGroup = (e) => {\n    changeGroup(e.target.value);\n    dispatch(setGroup(e.target.value));\n  };\n\n  const handleChangeGrade = (e) => {\n    const currentGrade = e.target.value;\n    changeGrade(currentGrade);\n    dispatch(setGrade(currentGrade));\n    const firstGroup = groupsByGrade[currentGrade][0];\n    changeGroup(firstGroup);\n    dispatch(setGroup(firstGroup));\n  };\n\n  return (\n    <div className=\"options-container\">\n      <div className=\"title\">\n        <h1>\n          Mapa de Notas &mdash; {grade}º ano &mdash; {group}\n        </h1>\n      </div>\n      <div className=\"options\">\n        <div className=\"option\">\n          <label htmlFor=\"grade\">Série: </label>\n          <select name=\"grade\" value={grade} onChange={handleChangeGrade}>\n            {allGrades.map((grade) => (\n              <option value={grade} key={`grade-${grade}`}>\n                {grade}ª\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"option\">\n          <label htmlFor=\"group\">Turma: </label>\n          <select name=\"group\" value={group} onChange={handleChangeGroup}>\n            {groupsByGrade[grade].map((groupName) => (\n              <option\n                value={groupName}\n                key={`group-${groupName.split(\" \")[0]}`}\n              >\n                {groupName}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"option\">\n          <label htmlFor=\"bimester\">Bimestre: </label>\n          <select\n            name=\"bimester\"\n            value={bimester}\n            onChange={handleChangeBimester}\n          >\n            {allBimesters.map((bim) => (\n              <option value={bim} key={`bim-${bim}`}>\n                {bim}º\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Options;\n","const shortenString = (string, len) => {\n  if (len >= string.length) return string;\n  return string.substring(0, len);\n};\n\nexport default shortenString;\n","import React from \"react\";\n\nimport \"./table-row.styles.scss\";\n\nimport calcCssClass from \"../../utils/calcCssClass\";\nimport shortenString from \"../../utils/shortenString\";\n\nconst recCssClass = (rec) =>\n  rec === 0\n    ? \"ss\"\n    : rec === 1\n    ? \"ms\"\n    : rec === 2\n    ? \"mm\"\n    : rec === 3\n    ? \"mi\"\n    : \"ii\";\n\nconst TableRow = ({ student, bimester, headers, failedSubjects }) => (\n  <tr>\n    {headers\n      .map((el) =>\n        el !== \"F\" ? (\n          <td\n            className={`${\n              [\"NUM\", \"NOME\"].includes(el) ? el : \"sub\"\n            } ${calcCssClass(el, student[el], bimester, 2)}`}\n            key={`sd-${student.NUM}-${el}`}\n          >\n            {el === \"NOME\"\n              ? shortenString(student[el], 30)\n              : el !== \"NUM\"\n              ? student[el].toFixed(2)\n              : student[el]}\n          </td>\n        ) : (\n          \"\"\n        )\n      )\n      .filter((el) => el !== \"\")}\n    <td\n      className={`sub ${recCssClass(failedSubjects)}`}\n      key={`sd-${student.NUM}-REC`}\n    >\n      {failedSubjects}\n    </td>\n  </tr>\n);\n\nexport default TableRow;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport TableRow from \"../table-row/table-row.component\";\n\nimport studentsData from \"../../dev-data/output.json\";\n\nimport \"./table.styles.scss\";\n\nconst Table = () => {\n  const { bimester, group } = useSelector((state) => state.options);\n\n  const currentMap = studentsData[group][bimester];\n  const { failedSubjects, headers } = currentMap.metadata;\n  const { data } = currentMap;\n\n  return (\n    <div className=\"table-container\">\n      <table className=\"table\">\n        <thead className=\"table--head\">\n          <tr>\n            {headers\n              .map((header) =>\n                header !== \"F\" ? (\n                  <th\n                    key={`head-${header}`}\n                    className={\n                      [\"NUM\", \"NOME\"].includes(header)\n                        ? `head ${header}`\n                        : \"sub\"\n                    }\n                  >\n                    {header === \"NUM\" ? \"Nº\" : header}\n                  </th>\n                ) : (\n                  \"\"\n                )\n              )\n              .filter((el) => el !== \"\")}\n            <th key={`head-REC`} className=\"sub\">\n              REC\n            </th>\n          </tr>\n        </thead>\n        <tbody className=\"table--body\">\n          {Object.values(data).map((student) => (\n            <TableRow\n              student={student}\n              bimester={bimester}\n              headers={headers}\n              failedSubjects={failedSubjects[student.NUM]}\n              key={`student-${student.NUM}`}\n            />\n          ))}\n        </tbody>\n        <tfoot className=\"table--head\">\n          <tr>\n            {headers\n              .map((header) =>\n                header !== \"F\" ? (\n                  <th\n                    key={`head-${header}`}\n                    className={\n                      [\"NUM\", \"NOME\"].includes(header)\n                        ? `head ${header}`\n                        : \"sub\"\n                    }\n                  >\n                    {header === \"NUM\" ? \"Nº\" : header}\n                  </th>\n                ) : (\n                  \"\"\n                )\n              )\n              .filter((el) => el !== \"\")}\n            <th key={`head-REC`} className=\"sub\">\n              REC\n            </th>\n          </tr>\n        </tfoot>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport Options from \"./components/options/options.component\";\nimport Table from \"./components/table/table.component\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Options />\n        <Table />\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}